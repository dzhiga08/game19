# Функция для создания игрового поля
def create_board():
    # Игровое поле: создаем список цифр от 1 до 9, и от 11 до 19 (без 10)
    digits = list("123456789111213141516171819")
    # Разбиваем список цифр на три строки: первые 9 цифр, затем следующие 9 и последние 9
    board = [digits[:9], digits[9:18], digits[18:]]
    return board  # Возвращаем полученное игровое поле

# Функция для отображения игрового поля
def print_board(board):
    print("Текущее состояние поля:")  # Выводим заголовок
    for row in board:  # Для каждой строки на поле
        print(" ".join(row))  # Выводим строку цифр, соединяя их пробелами

# Функция для проверки соседства (по горизонтали или вертикали) с учетом вычеркнутых клеток(для поиска "-")
def are_neighbors(pos1, pos2, board):
    row1, col1 = pos1  # Разбираем первую позицию на строку и колонку
    row2, col2 = pos2  # Разбираем вторую позицию на строку и колонку

    if row1 == row2:  # Если цифры находятся в одной строке (проверка по горизонтали)
        # Проверяем, можно ли перепрыгнуть через вычеркнутые клетки
        start, end = min(col1, col2), max(col1, col2)  # Находим минимальный и максимальный индексы колонок
        return all(board[row1][i] == "-" for i in range(start + 1, end))  # Проверяем все промежуточные клетки на вычеркнутые ("-")

    if col1 == col2:  # Если цифры находятся в одном столбце (проверка по вертикали)
        # Проверяем, можно ли "перепрыгнуть" через вычеркнутые клетки
        start, end = min(row1, row2), max(row1, row2)  # Находим минимальный и максимальный индексы строк
        return all(board[i][col1] == "-" for i in range(start + 1, end))  # Проверяем все промежуточные клетки на вычеркнутые ("-")

    return False  # Если цифры не соседи (ни по горизонтали, ни по вертикали)

# Функция для ввода координат от игрока
def get_coordinates():
    while True:  # Бесконечный цикл — продолжаем спрашивать координаты, пока не будут введены корректные данные
        try:
            # Спрашиваем у игрока номер строки для первой цифры
            x1 = int(input("Введите номер строки первой цифры (1-3): "))
            # Спрашиваем у игрока номер столбца для первой цифры
            y1 = int(input("Введите номер столбца первой цифры (1-9): "))
            # Спрашиваем у игрока номер строки для второй цифры
            x2 = int(input("Введите номер строки второй цифры (1-3): "))
            # Спрашиваем у игрока номер столбца для второй цифры
            y2 = int(input("Введите номер столбца второй цифры (1-9): "))

            # Преобразуем координаты из ввода в индексы (вычитаем 1, чтобы преобразовать их в индекс массива)
            return (x1 - 1, y1 - 1), (x2 - 1, y2 - 1)
        except ValueError:  # Если игрок ввел что-то некорректное (например, буквы вместо чисел)
            print("Некорректный ввод. Введите числовые значения.")  # Выводим сообщение об ошибке

# Функция для удаления пары цифр
def remove_pair(board, pos1, pos2):
    row1, col1 = pos1  # Получаем строку и колонку первой цифры
    row2, col2 = pos2  # Получаем строку и колонку второй цифры
    # Проверяем, что обе цифры не вычеркнуты (то есть они не равны "-")
    if board[row1][col1] != "-" and board[row2][col2] != "-":
        num1 = int(board[row1][col1])  # Преобразуем первую цифру в число
        num2 = int(board[row2][col2])  # Преобразуем вторую цифру в число
        # Проверяем, можно ли удалить пару (если цифры одинаковы или их сумма равна 10, и они соседи)
        if (num1 == num2 or num1 + num2 == 10) and are_neighbors(pos1, pos2, board):
            # Если пара подходит, заменяем обе цифры на "-"
            board[row1][col1] = "-"
            board[row2][col2] = "-"
            return True  # Сообщаем, что пара успешно вычеркнута
    return False  # Если пара не подходит, возвращаем False

# Основная логика игры
def play_game():
    board = create_board()  # Создаем игровое поле, состоящее из цифр
    while True:  # Бесконечный цикл — игра продолжается до тех пор, пока не закончатся доступные ходы
        print_board(board)  # Выводим текущее состояние игрового поля

        # Получаем координаты двух цифр от игрока
        pos1, pos2 = get_coordinates()

        # Если пара цифр подходит, удаляем её
        if remove_pair(board, pos1, pos2):
            print("Пара вычеркнута!")  # Если пара успешно удалена, выводим сообщение
        else:
            print("Неправильная пара. Попробуйте еще раз.")  # Если пара не подходит, сообщаем об этом

        # Проверяем, остались ли еще цифры (ищем невычеркнутые цифры, которые не равны "-")
        remaining = [num for row in board for num in row if num != "-"]
        if len(remaining) < 2:  # Если осталось меньше двух цифр, игра завершена
            print("Игра завершена. Все возможные ходы сделаны.")  # Сообщаем, что игра окончена
            break  # Выходим из цикла и заканчиваем игру

# Запуск игры
play_game()  # Вызываем функцию, чтобы начать игру